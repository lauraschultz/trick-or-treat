{"version":3,"sources":["config.ts","firebase.ts","RequestPage.tsx","SendPage.tsx","App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fB","rootRef","getCandies","Promise","resolve","reject","child","once","snp","Object","entries","val","map","id","name","subscribeToCandiesChanged","callback","on","unSubscribeToCandiesChanged","off","subscribeToOrderSubmitted","_","a","candies","timestamp","Date","key","split","candyId","this","unSubscribeToOrderSubmitted","addCandy","candyName","push","update","removeCandy","remove","submitOrder","candyIds","getTime","join","console","log","firebase","initializeApp","database","ref","RequestPage","useState","setCandies","checkedCandies","setCheckedCandies","useRef","useEffect","newCandies","onSubmit","e","preventDefault","filter","c","type","checked","onChange","cC","SendPage","orders","setOrders","newCandyName","setNewCandyName","newOrder","currentOrders","concat","o","getHours","getMinutes","onClick","value","target","App","path","exact","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAaA,EAAiB,CAC1BC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,eACnBC,MAAO,6CC2EIC,EADN,IA1EP,aAAe,IAAD,gCAFdC,aAEc,OAMdC,WAAa,WACX,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,EAAKJ,QAAQK,MAAM,WAAWC,KAAK,SAAS,SAACC,GAC3CJ,EACEK,OAAOC,QAAQF,EAAIG,OAAOC,KAAI,yCAAiB,CAC7CC,GAD4B,KAE5BC,KAF4B,iBAVxB,KA2BdC,0BAA4B,SAACC,GAC3B,EAAKf,QAAQK,MAAM,WAAWW,GAAG,SAAS,SAACT,GAAD,OACxCQ,EACEP,OAAOC,QAAQF,EAAIG,OAAOC,KAAI,yCAAiB,CAC7CC,GAD4B,KAE5BC,KAF4B,cA9BtB,KAsCdI,4BAA8B,WAC5B,EAAKjB,QAAQK,MAAM,WAAWa,IAAI,UAvCtB,KA0CdC,0BAA4B,SAACJ,GAC3B,EAAKf,QAAQK,MAAM,UAAUW,GAAG,cAAhC,uCAA+C,WAAOT,EAAKa,GAAZ,eAAAC,EAAA,sEACvB,EAAKrB,QAAQK,MAAM,WAAWC,KAAK,SADZ,OACvCgB,EADuC,OAG7CP,EAAS,CACPQ,UAAW,IAAIC,MAAMjB,EAAIkB,KACzBH,QAASf,EAAIG,MAAMgB,MAAM,KAAKf,KAAI,SAACgB,GAAD,MAAqB,CAACf,GAAIe,EAASd,KAAMS,EAAQZ,MAAMiB,IAAY,4BAL1D,2CAA/C,oCAAAC,KAAA,iBA3CY,KAqDdC,4BAA8B,WAC5B,EAAK7B,QAAQK,MAAM,UAAUa,IAAI,gBAtDrB,KAyDdY,SAAW,SAACC,GACV,IAAMN,EAAM,EAAKzB,QAAQK,MAAM,WAAW2B,OAAOP,IACjD,EAAKzB,QAAQK,MAAM,WAAW4B,OAA9B,eAAwCR,EAAMM,KA3DlC,KA8DdG,YAAc,SAACP,GACb,EAAK3B,QAAQK,MAAb,kBAA8BsB,IAAWQ,UA/D7B,KAkEdC,YAAc,SAACC,GAEb,EAAKrC,QAAQK,MAAM,UAAU4B,OAA7B,gBACG,IAAIT,MAAOc,UAAYD,EAASE,KAAK,QApExCC,QAAQC,IAAR,8BACAC,IAASC,cAAcpD,GACvBqC,KAAK5B,QAAU0C,IAASE,WAAWC,OC0CxBC,EAhDe,WAAO,IAAD,EACNC,mBAAkB,IADZ,mBAC7BzB,EAD6B,KACpB0B,EADoB,OAEQD,mBAEvC,IAJ+B,mBAE7BE,EAF6B,KAEbC,EAFa,KAKhBC,kBAAO,GAqBzB,OAZAC,qBAAU,WASR,OAPCrD,EAAGe,2BAA0B,SAACuC,GAC7BL,EAAWK,MAMN,kBAAMtD,EAAGkB,iCACf,IAGD,6BACE,mEACA,0BACEqC,SAAU,SAACC,GACTA,EAAEC,iBACFzD,EAAGqC,YAAY5B,OAAOC,QAAQwC,GAAgBQ,QAAO,uDAA+B9C,KAAI,mCAAEC,EAAF,iBAAaA,MACrGsC,EAAkB,MAGnB5B,EAAQX,KAAI,SAAC+C,GAAD,OACX,2BAAOjC,IAAKiC,EAAE9C,IACZ,2BAAO+C,KAAK,WAAWC,QAASX,EAAeS,EAAE9C,IAAKiD,SAAU,SAAAN,GAAC,OA5BnD5B,EA4BsE+B,EAAE9C,QA3B9FsC,GAAkB,SAAAY,GAAE,kCAASA,GAAT,kBAAcnC,GAAWmC,EAAGnC,QAD3B,IAACA,KA6Bb+B,EAAE7C,SAGP,4BAAQ8C,KAAK,UAAb,aCgBOI,EA1DY,WAAO,IAAD,EACLhB,mBAAkB,IADb,mBAC1BiB,EAD0B,KAClBC,EADkB,OAEHlB,mBAAkB,IAFf,mBAE1BzB,EAF0B,KAEjB0B,EAFiB,OAGOD,mBAAS,IAHhB,mBAG1BmB,EAH0B,KAGZC,EAHY,KAoB/B,OAfAf,qBAAU,WAQR,OANArD,EAAGe,2BAA0B,SAACuC,GAAD,OAAgBL,EAAWK,MAExDtD,EAAGoB,2BAA0B,SAACiD,GAAD,OAC3BH,GAAU,SAACI,GAAD,OAAmBA,EAAcC,OAAO,CAACF,UAG9C,WAELrE,EAAGkB,8BACHlB,EAAG8B,iCAEJ,IAGD,oCACE,sCACA,4BACGmC,EAAOrD,KAAI,SAAC4D,GAAD,iBACV,wBAAI9C,IAAG,UAAE8C,EAAEhD,iBAAJ,aAAE,EAAae,WAClB,0CACGiC,EAAEhD,iBADL,aACG,EAAaiD,WADhB,cAC6BD,EAAEhD,iBAD/B,aAC6B,EAAakD,aAD1C,YAGDF,EAAEjD,QAAQX,KAAI,SAAA+C,GAAC,OAAIA,EAAE7C,QAAM0B,KAAK,WAIvC,+CACCjB,EAAQX,KAAI,SAAC+C,GAAD,OACX,yBAAKjC,IAAKiC,EAAE9C,IACT8C,EAAE7C,KADL,IACW,4BAAQ6D,QAAS,kBAAM3E,EAAGmC,YAAYwB,EAAE9C,MAAxC,cAff,aAkBa,IACX,0BACE0C,SAAU,SAACC,GACTA,EAAEC,iBACFzD,EAAG+B,SAASoC,GACZC,EAAgB,MAGlB,2BACER,KAAK,OACLgB,MAAOT,EACPL,SAAU,SAACN,GAAD,OAAOY,EAAgBZ,EAAEqB,OAAOD,UAE5C,4BAAQhB,KAAK,UAAb,aC7BOkB,MArBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,GAC5B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,GACzB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAK,GAArB,UAEE,kBAAC,IAAD,CAAMC,GAAG,cAAT,oBACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,kBAEF,kBAAC,IAAD,CAAOF,KAAK,KACV,kBAAC,IAAD,CAAUE,GAAG,SChBrBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.9d8fa71e.chunk.js","sourcesContent":["export const firebaseConfig = {\n    apiKey: \"AIzaSyAmCghJdMvcKxDMCmQVQ2lDwvEM0e-DLQ4\",\n    authDomain: \"halloween-candy-dispenser.firebaseapp.com\",\n    databaseURL: \"https://halloween-candy-dispenser.firebaseio.com\",\n    projectId: \"halloween-candy-dispenser\",\n    storageBucket: \"halloween-candy-dispenser.appspot.com\",\n    messagingSenderId: \"489903711579\",\n    appId: \"1:489903711579:web:b31f80544c27adeb73667e\"\n  };\n","import firebase from \"firebase\";\nimport { firebaseConfig } from \"./config\";\nimport { Candy, Order } from \"./types\";\n\nexport class FB {\n  rootRef: firebase.database.Reference;\n\n  constructor() {\n    console.log(`initializing firebase app.`);\n    firebase.initializeApp(firebaseConfig);\n    this.rootRef = firebase.database().ref();\n  }\n\n  getCandies = (): Promise<Candy[]> => {\n    return new Promise((resolve, reject) => {\n      this.rootRef.child(\"candies\").once(\"value\", (snp) => {\n        resolve(\n          Object.entries(snp.val()).map(([id, name]) => ({\n            id: id,\n            name: name as string,\n          }))\n        );\n      });\n    });\n  };\n\n  // getOrders = (): Promise<Order[]> => {\n  //   return new Promise((resolve, reject) => {\n  //     this.rootRef.child(\"orders\").once(\"value\", (snp) => {\n  //       resolve(snp.val());\n  //     });\n  //   });\n  // };\n\n  subscribeToCandiesChanged = (callback: (newVal: Candy[]) => void) => {\n    this.rootRef.child(\"candies\").on(\"value\", (snp) =>\n      callback(\n        Object.entries(snp.val()).map(([id, name]) => ({\n          id: id,\n          name: name as string,\n        }))\n      )\n    );\n  };\n\n  unSubscribeToCandiesChanged = () => {\n    this.rootRef.child(\"candies\").off(\"value\");\n  };\n\n  subscribeToOrderSubmitted = (callback: (order: Order) => void) => {\n    this.rootRef.child(\"orders\").on(\"child_added\", async (snp, _) => {\n      const candies = await this.rootRef.child(\"candies\").once('value')\n      // console.log(`new order is ${JSON.stringify(newOrder)}`);\n      callback({\n        timestamp: new Date(+snp.key!),\n        candies: snp.val().split(\",\").map((candyId:string) => ({id: candyId, name: candies.val()[candyId] || 'no longer available'})),\n      });\n    });\n  };\n\n  unSubscribeToOrderSubmitted = () => {\n    this.rootRef.child(\"orders\").off(\"child_added\");\n  };\n\n  addCandy = (candyName: string) => {\n    const key = this.rootRef.child(\"candies\").push().key!;\n    this.rootRef.child(\"candies\").update({ [key]: candyName });\n  };\n\n  removeCandy = (candyId: string) => {\n    this.rootRef.child(`candies/${candyId}`).remove();\n  };\n\n  submitOrder = (candyIds: string[]) => {\n    // const key = this.rootRef.child(\"orders\").push().key!;\n    this.rootRef.child(\"orders\").update({\n      [new Date().getTime()]: candyIds.join(\",\"),\n    });\n  };\n}\n\nlet fB = new FB();\nexport default fB;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport fB from \"./firebase\";\nimport { Candy } from \"./types\";\n\nconst RequestPage: React.FC = () => {\n  let [candies, setCandies] = useState<Candy[]>([]);\n  let [checkedCandies, setCheckedCandies] = useState<{\n    [candyId: string]: boolean;\n  }>({});\n  let initialized = useRef(false);\n  // useEffect(() => {\n  //   candies.forEach((c) => (checkedCandies[c.id] = true));\n  // }, [candies]);\n\n  const toggleCheckbox = (candyId:string) => {\n    setCheckedCandies(cC => ({...cC, [candyId]: !cC[candyId]}))\n  }\n\n  useEffect(() => {\n    // if(initialized.current){\n     fB.subscribeToCandiesChanged((newCandies) => {\n      setCandies(newCandies);\n    });\n    // initialized.current = true; \n    // }\n    \n\n    return () => fB.unSubscribeToCandiesChanged();\n  }, []);\n\n  return (\n    <div>\n      <h2>Choose which candies you would like</h2>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fB.submitOrder(Object.entries(checkedCandies).filter(([_, isChecked]) => isChecked).map(([id, _]) => id));\n          setCheckedCandies({});\n        }}\n      >\n        {candies.map((c) => (\n          <label key={c.id}>\n            <input type=\"checkbox\" checked={checkedCandies[c.id]} onChange={e => toggleCheckbox(c.id)}/>\n            {c.name}\n          </label>\n        ))}\n        <button type=\"submit\">submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RequestPage;\n","import React, { useEffect, useState } from \"react\";\nimport fB from \"./firebase\";\nimport { Candy, Order } from \"./types\";\n\nconst SendPage: React.FC = () => {\n  let [orders, setOrders] = useState<Order[]>([]);\n  let [candies, setCandies] = useState<Candy[]>([]);\n  let [newCandyName, setNewCandyName] = useState(\"\");\n\n  useEffect(() => {\n    //   console.log('subscribing')\n    fB.subscribeToCandiesChanged((newCandies) => setCandies(newCandies));\n\n    fB.subscribeToOrderSubmitted((newOrder) =>\n      setOrders((currentOrders) => currentOrders.concat([newOrder]))\n    );\n\n    return () => {\n        // console.log('unsubscribing')\n      fB.unSubscribeToCandiesChanged();\n      fB.unSubscribeToOrderSubmitted();\n    };\n  }, []);\n\n  return (\n    <>\n      <h2>Orders</h2>\n      <ul>\n        {orders.map((o) => (\n          <li key={o.timestamp?.getTime()}>\n              <strong>\n                {o.timestamp?.getHours()}:{o.timestamp?.getMinutes()}&nbsp;&nbsp;\n              </strong>\n            {o.candies.map(c => c.name).join(\", \")}\n          </li>\n        ))}\n      </ul>\n      <h2>Current candies</h2>\n      {candies.map((c) => (\n        <div key={c.id}>\n          {c.name} <button onClick={() => fB.removeCandy(c.id)}>delete</button>\n        </div>\n      ))}\n      add candy:{\" \"}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fB.addCandy(newCandyName);\n          setNewCandyName(\"\");\n        }}\n      >\n        <input\n          type=\"text\"\n          value={newCandyName}\n          onChange={(e) => setNewCandyName(e.target.value)}\n        />\n        <button type=\"submit\">submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default SendPage;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport RequestPage from \"./RequestPage\";\nimport SendPage from \"./SendPage\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/requester\" exact>\n        <RequestPage />\n      </Route>\n      <Route path=\"/sender\" exact>\n        <SendPage />\n      </Route>\n      <Route path=\"/\" exact>\n        I am...\n        <Link to=\"/requester\">requesting candy</Link>\n        <Link to=\"/sender\">sending candy</Link>\n      </Route>\n      <Route path=\"/\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}