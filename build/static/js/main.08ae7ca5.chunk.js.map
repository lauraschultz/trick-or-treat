{"version":3,"sources":["assets/doorbell.mp3","config.ts","firebase.ts","RequestPage.tsx","SendPage.tsx","Home.tsx","App.tsx","index.tsx"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fB","rootRef","getCandies","Promise","resolve","reject","child","once","snp","Object","entries","val","map","id","name","subscribeToCandiesChanged","callback","on","exists","filter","available","unSubscribeToCandiesChanged","off","subscribeToOrderSubmitted","_","a","candies","timestamp","Date","key","split","candyId","this","unSubscribeToOrderSubmitted","addCandy","candyName","push","update","removeCandy","submitOrder","candyIds","length","getTime","join","deleteAllOrders","set","console","log","firebase","initializeApp","database","ref","RequestPage","useState","setCandies","checkedCandies","setCheckedCandies","showSentMsg","setShowSetMsg","intervalId","setIntervalId","useEffect","newCandies","className","onSubmit","e","preventDefault","clearInterval","setInterval","c","type","checked","onChange","cC","icon","faCheck","doorbell","require","SendPage","orders","setOrders","newCandyName","setNewCandyName","useSound","playDoorbell","canPlay","newOrder","currentOrders","concat","onClick","faTrash","o","time","padZeros","n","slice","getHours","getMinutes","getTimeString","value","target","Home","to","App","path","exact","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.08ae7ca5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doorbell.e5ebc927.mp3\";","export const firebaseConfig = {\n    apiKey: \"AIzaSyAmCghJdMvcKxDMCmQVQ2lDwvEM0e-DLQ4\",\n    authDomain: \"halloween-candy-dispenser.firebaseapp.com\",\n    databaseURL: \"https://halloween-candy-dispenser.firebaseio.com\",\n    projectId: \"halloween-candy-dispenser\",\n    storageBucket: \"halloween-candy-dispenser.appspot.com\",\n    messagingSenderId: \"489903711579\",\n    appId: \"1:489903711579:web:b31f80544c27adeb73667e\"\n  };\n","import firebase from \"firebase\";\nimport { firebaseConfig } from \"./config\";\nimport { Candy, Order } from \"./types\";\n\nexport class FB {\n  rootRef: firebase.database.Reference;\n\n  constructor() {\n    console.log(`initializing firebase app.`);\n    firebase.initializeApp(firebaseConfig);\n    this.rootRef = firebase.database().ref();\n  }\n\n  getCandies = (): Promise<Candy[]> => {\n    return new Promise((resolve, reject) => {\n      this.rootRef.child(\"candies\").once(\"value\", (snp) => {\n        resolve(\n          Object.entries(snp.val()).map(([id, name]) => ({\n            id: id,\n            name: name as string,\n          }))\n        );\n      });\n    });\n  };\n\n  // getOrders = (): Promise<Order[]> => {\n  //   return new Promise((resolve, reject) => {\n  //     this.rootRef.child(\"orders\").once(\"value\", (snp) => {\n  //       resolve(snp.val());\n  //     });\n  //   });\n  // };\n\n  subscribeToCandiesChanged = (callback: (newVal: Candy[]) => void) => {\n    this.rootRef.child(\"candies\").on(\"value\", (snp) => {\n      if (!snp.exists()) {\n        callback([]);\n      } else {\n        callback(\n          Object.entries(snp.val())\n            .filter(([id, c]) => (c as any).available)\n            .map(([id, c]) => ({\n              id: id,\n              name: (c as any).name as string,\n            }))\n        );\n      }\n    });\n  };\n\n  unSubscribeToCandiesChanged = () => {\n    this.rootRef.child(\"candies\").off(\"value\");\n  };\n\n  subscribeToOrderSubmitted = (callback: (order: Order) => void) => {\n    this.rootRef.child(\"orders\").on(\"child_added\", async (snp, _) => {\n      const candies =\n        (await (await this.rootRef.child(\"candies\").once(\"value\")).val()) || {};\n      // console.log(`new order is ${JSON.stringify(newOrder)}`);\n      callback({\n        timestamp: new Date(+snp.key!),\n        candies: snp\n          .val()\n          .split(\",\")\n          .map((candyId: string) => ({\n            id: candyId,\n            name: candies[candyId]?.name || \"no longer available\",\n          })),\n      });\n    });\n  };\n\n  unSubscribeToOrderSubmitted = () => {\n    this.rootRef.child(\"orders\").off(\"child_added\");\n  };\n\n  addCandy = (candyName: string) => {\n    const key = this.rootRef.child(\"candies\").push().key!;\n    this.rootRef\n      .child(\"candies\")\n      .update({ [key]: { name: candyName, available: true } });\n  };\n\n  removeCandy = (candyId: string) => {\n    this.rootRef.child(`candies/${candyId}`).update({ available: false });\n  };\n\n  submitOrder = (candyIds: string[]) => {\n    if (candyIds.length > 0) {\n      this.rootRef.child(\"orders\").update({\n        [new Date().getTime()]: candyIds.join(\",\"),\n      });\n    }\n  };\n\n  deleteAllOrders = () => {\n    this.rootRef.child('orders').set(false)\n  }\n}\n\nlet fB = new FB();\nexport default fB;\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport fB from \"./firebase\";\nimport { Candy } from \"./types\";\n\nconst RequestPage: React.FC = () => {\n  let [candies, setCandies] = useState<Candy[]>([]);\n  let [checkedCandies, setCheckedCandies] = useState<{\n    [candyId: string]: boolean;\n  }>({});\n  let [showSentMsg, setShowSetMsg] = useState(false)\n  let [intervalId, setIntervalId] = useState<NodeJS.Timeout>();\n\n\n  const toggleCheckbox = (candyId: string) => {\n    setCheckedCandies((cC) => ({ ...cC, [candyId]: !cC[candyId] }));\n  };\n\n  useEffect(() => {\n    fB.subscribeToCandiesChanged((newCandies) => {\n      setCandies(newCandies);\n    });\n\n    return () => fB.unSubscribeToCandiesChanged();\n  }, []);\n\n  return (\n    <div className=\"max-w-md p-2 z-10\">\n      <h2 className=\"large-title\"> Choose your candy:</h2>\n      {/* <div className=\"w-full h-2 \"></div> */}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fB.submitOrder(\n            Object.entries(checkedCandies)\n              .filter(([_, isChecked]) => isChecked)\n              .map(([id, _]) => id)\n          );\n          setCheckedCandies({});\n          setShowSetMsg(true);\n          if(intervalId){\n            clearInterval(intervalId);\n          }\n          setIntervalId(setInterval(() => setShowSetMsg(false), 4000))\n\n        }}\n      >\n        {candies.map((c) => (\n          <div className=\"inline-block w-1/2 p-1\">\n            <label\n              key={c.id}\n              className={\n                \"flex items-center p-2 border-2 border-white rounded \" +\n                (checkedCandies[c.id] ? \"bg-white text-theme-dark\" : \"\")\n              }\n            >\n              <input\n                className=\"hidden\"\n                type=\"checkbox\"\n                checked={checkedCandies[c.id]}\n                onChange={(e) => toggleCheckbox(c.id)}\n              />\n              <FontAwesomeIcon\n                icon={faCheck}\n                className={\"mr-2 \" + (checkedCandies[c.id] ? \"\" : \"opacity-0\")}\n              />\n              {c.name}\n            </label>\n          </div>\n        ))}\n        <button\n          type=\"submit\"\n          className=\"bg-gradient-to-r from-theme-yellow to-theme-orange mt-4 text-shadow-black w-full py-1 text-lg font-bold italic uppercase tracking-wide rounded\"\n        >\n          submit\n        </button>\n        <div className={\"ml-1 text-xs font-normal \" + (showSentMsg ? \"\" : \"opacity-0\")}>\n            request sent.\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nexport default RequestPage;\n","import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport fB from \"./firebase\";\nimport { Candy, Order } from \"./types\";\nconst doorbell = require(\"./assets/doorbell.mp3\");\n\nconst SendPage: React.FC = () => {\n  let [orders, setOrders] = useState<Order[]>([]);\n  let [candies, setCandies] = useState<Candy[]>([]);\n  let [newCandyName, setNewCandyName] = useState(\"\");\n  let [playDoorbell] = useSound(doorbell);\n\n  useEffect(() => {\n    console.log(`useEffect`);\n    // hack so that it doesnt scream when opening the app for the first time\n    let canPlay = false;\n    setInterval(() => (canPlay = true), 1500);\n    fB.subscribeToCandiesChanged((newCandies) => setCandies(newCandies));\n\n    fB.subscribeToOrderSubmitted((newOrder: Order) => {\n      if (canPlay) {\n        playDoorbell();\n      }\n      setOrders((currentOrders) => [newOrder].concat(currentOrders));\n    });\n\n    return () => {\n      fB.unSubscribeToCandiesChanged();\n      fB.unSubscribeToOrderSubmitted();\n      setOrders([]);\n    };\n  }, [playDoorbell]);\n\n  const getTimeString = (time?: Date): string => {\n    if (!time) {\n      return \"\";\n    }\n    const padZeros = (n: number) => (\"00\" + n).slice(-2);\n    return `${padZeros(time.getHours())}:${padZeros(time.getMinutes())}`;\n  };\n\n  return (\n    <div className=\"max-w-md p-2 z-10\">\n      <h2 className=\"large-title\">\n        Orders:\n        <button\n          onClick={() => {\n            fB.deleteAllOrders();\n            setOrders([]);\n          }}\n          className=\"float-right text-red-600 border border-red-800 px-2 py-1 ml-3 text-xs rounded\"\n        >\n          <FontAwesomeIcon icon={faTrash} className=\"mr-1\" />\n          delete all orders\n        </button>\n      </h2>\n      <ul className=\"divide-y divide-white divide-opacity-25 ml-2\">\n        {orders.length === 0 && <p>No orders to show.</p>}\n        {orders.map((o) => (\n          <li key={o.timestamp?.getTime()} className=\"px-2 py-1\">\n            <strong>{getTimeString(o.timestamp)}&nbsp;&nbsp;</strong>\n            {o.candies.map((c) => c.name).join(\", \")}\n          </li>\n        ))}\n      </ul>\n      <h2 className=\"large-title\"> Current candies:</h2>\n      <ul className=\"divide-y divide-white divide-opacity-25 ml-2\">\n        {candies.length === 0 && <p>No candies to show.</p>}\n        {candies.map((c) => (\n          <li key={c.id} className=\"px-2 py-1 flex items-center\">\n            {c.name}{\" \"}\n            <button\n              onClick={() => fB.removeCandy(c.id)}\n              className=\"text-red-600 border border-red-800 px-1 ml-3 text-xs rounded\"\n            >\n              <FontAwesomeIcon icon={faTrash} className=\"mr-1\" />\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      <span className=\"mt-3 ml-2 font-bold\">Add candy:</span>\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fB.addCandy(newCandyName);\n          setNewCandyName(\"\");\n        }}\n      >\n        <input\n          className=\"rounded-l px-2 py-1 ml-4 text-theme-dark\"\n          type=\"text\"\n          value={newCandyName}\n          onChange={(e) => setNewCandyName(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className=\"rounded-r py-1 px-2 bg-theme-green uppercase italic font-bold tracking-wide text-white text-shadow-black\"\n        >\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SendPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home: React.FC = () => {\n  return (\n    <div className=\"max-w-md p-2 z-10 leading-tight\">\n      <h2\n        className=\"large-title\"\n      >\n        I am:\n      </h2>\n      <div className=\"flex\">\n        <Link className=\"flex-initial text-center m-1 inline-block py-2 px-4 border-2 border-white rounded hover:bg-white hover:text-theme-dark\" to=\"/requester\">requesting candy</Link>\n        <Link className=\"flex-initial text-center m-1 inline-block py-2 px-4 border-2 border-white rounded hover:bg-white hover:text-theme-dark\" to=\"/sender\">sending candy</Link>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport RequestPage from \"./RequestPage\";\nimport SendPage from \"./SendPage\";\nimport \"./comp.css\"\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <>\n    <div className=\"hidden sm:inline fixed bg-ghosts bg-repeat-y h-screen w-48 z-0 bg-contain ml-4 md:ml-12 lg:ml-32 opacity-75 left-0 top-0\"></div>\n    <Switch>\n      <Route path=\"/requester\" exact>\n        <RequestPage />\n      </Route>\n      <Route path=\"/sender\" exact>\n        <SendPage />\n      </Route>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/trickOrTreat\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}